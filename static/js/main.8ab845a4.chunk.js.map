{"version":3,"sources":["logo.svg","Components/UserInfo.js","Store/reducer.js","Api/api.js","Components/UserList/UserItem.js","Components/UserList/UserList.js","Components/SearchLine.js","App.js","Store/store.js","index.js"],"names":["module","exports","UserInfo","props","following","followers","repositories","userIsSelected","userInfo","map","user","key","id","className","href","html_url","login","repos","owner","name","src","avatar","alt","connect","state","selectedUser","setUsersAC","users","isUpdate","type","setCurrentPageAC","page","toggleFetchingAC","isFetching","initialState","usersList","searchValue","currentPage","pageSize","usersCount","userReducer","action","value","count","baseURL","fetchUsers","userPerPage","fetch","then","response","json","UserItem","onClick","requests","url","Promise","all","responses","fetchUserInfo","selectUser","style","width","dispatch","selectUserAC","UserList","listIsEnd","avatar_url","role","setCurrentPage","toggleFetching","searchResult","setUsers","items","SearchLine","searchInput","createRef","searchDebounced","AwesomeDebouncePromise","console","log","placeholder","ref","onChange","current","changeSearchValue","setUsersCount","total_count","changeSearchValueAC","setUsersCountAC","App","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ab845a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet UserInfo = (props) => {\r\n    debugger;\r\n    let following;\r\n    let followers;\r\n    let repositories;\r\n\r\n    if (props.userIsSelected) {\r\n        following = props.userInfo.following.map((user) => {\r\n            return (\r\n                <span key={user.id} className=\"info-item\"><a href={user.html_url}>{user.login}</a></span>\r\n            )\r\n        });\r\n        followers = props.userInfo.followers.map((user) => {\r\n            return (\r\n                <span key={user.id} className=\"info-item\"><a href={user.html_url}>{user.login}</a></span>\r\n            )\r\n        });\r\n        repositories = props.userInfo.repositories.map((repos) => {\r\n            return (\r\n                <span key={repos.id} className=\"info-item\"><a href={repos.owner.html_url}>{repos.name}</a></span>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        props.userIsSelected &&\r\n        (<div className=\"user-info\">\r\n            <img src={props.userInfo.avatar} alt={props.userInfo.login} className={\"img-fluid img\"}/>\r\n            <h2>{props.userInfo.login}</h2>\r\n            <div className=\"following\">\r\n                <h4>Following</h4>\r\n                {following}\r\n            </div>\r\n            <div className=\"followers\">\r\n                <h4>Followers</h4>\r\n                {followers}\r\n            </div>\r\n            <div className=\"repositories\">\r\n                <h4>Repositories</h4>\r\n                {repositories}\r\n            </div>\r\n        </div>)\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userInfo: state.selectedUser,\r\n        userIsSelected: state.userIsSelected,\r\n    }\r\n}\r\n\r\nUserInfo = connect(mapStateToProps, null)(UserInfo);\r\n\r\nexport default UserInfo;","const SET_USERS = 'ADD-USERS';\r\nconst SELECT_USER = 'SELECT-USER';\r\nconst CHANGE_SEARCH_VALUE = 'CHANGE-SEARCH-VALUE';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_USER_COUNT = 'SET-USER-COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE-FETCHING'\r\n\r\nexport const setUsersAC = (users, isUpdate) => ({type: SET_USERS, users, isUpdate});\r\nexport const selectUserAC = (user) => ({type: SELECT_USER, user});\r\nexport const changeSearchValueAC = (value) => ({type: CHANGE_SEARCH_VALUE, value});\r\nexport const setCurrentPageAC = (page) => ({type: SET_CURRENT_PAGE, page});\r\nexport const setUsersCountAC = (count) => ({type: SET_USER_COUNT, count});\r\nexport const toggleFetchingAC = (isFetching) => ({type: TOGGLE_FETCHING, isFetching});\r\n\r\nconst initialState = {\r\n    usersList: [],\r\n    selectedUser: {\r\n        avatar: null,\r\n        login: null,\r\n        following: [],\r\n        followers: [],\r\n        repositories: [],\r\n    },\r\n    searchValue: '',\r\n    currentPage: null,\r\n    userIsSelected: false,\r\n    pageSize: 20,\r\n    usersCount: null,\r\n    isFetching: false,\r\n}\r\n\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_VALUE: {\r\n            return {\r\n                ...state,\r\n                searchValue: action.value,\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            if (action.isUpdate) {\r\n                return {\r\n                    ...state,\r\n                    usersList: [...action.users]\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    usersList: [...state.usersList, ...action.users]\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case SET_USER_COUNT: {\r\n            return {\r\n                ...state,\r\n                usersCount: action.count,\r\n            }\r\n        }\r\n        case SELECT_USER: {\r\n            return {\r\n                ...state,\r\n                selectedUser: {...action.user},\r\n                userIsSelected: true\r\n            }\r\n            break;\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default userReducer;","const baseURL = 'https://api.github.com/';\r\n\r\n\r\nexport const fetchUsers = (searchValue, page, userPerPage = 20) => {\r\n    return fetch(`${baseURL}search/users?q=${searchValue}&per_page=${userPerPage}&page=${page}`)\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n\r\n}\r\n\r\nexport const fetchUserInfo = (user) => {\r\n    const urls = [\r\n        `${baseURL}users/${user}/following`,\r\n        `${baseURL}users/${user}/followers`,\r\n        `${baseURL}users/${user}/repos`,\r\n    ];\r\n    const requests = urls.map(url => fetch(url));\r\n    return Promise.all(requests)\r\n        .then(responses => {\r\n            return Promise.all(responses.map(response => response.json()))\r\n        })\r\n}\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectUserAC} from \"../../Store/reducer\";\r\nimport {fetchUserInfo} from \"../../Api/api\";\r\n\r\n\r\nlet UserItem = (props) => {\r\n\r\n    const showUserInfo = () => {\r\n        fetchUserInfo(props.login).then(response => {\r\n            props.selectUser( {\r\n                avatar: props.avatar,\r\n                login: props.login,\r\n                following: response[0],\r\n                followers: response[1],\r\n                repositories: response[2],\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-item\" onClick={showUserInfo}>\r\n            <div className=\"card\" style={{width: '18rem',}}>\r\n                <img src={props.avatar} className=\"card-img-top\" alt={props.login}/>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{props.login}</p>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectUser: (user) => dispatch(selectUserAC(user)),\r\n    }\r\n}\r\n\r\nUserItem = connect(null, mapDispatchToProps)(UserItem);\r\n\r\nexport default UserItem;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport UserItem from \"./UserItem\";\r\nimport {changeSearchValueAC, setCurrentPageAC, setUsersAC, toggleFetchingAC} from \"../../Store/reducer\";\r\nimport {fetchUsers} from \"../../Api/api\";\r\n\r\n\r\nlet UserList = (props) => {\r\n\r\n    let listIsEnd = (props.usersCount / props.pageSize) <= props.currentPage;\r\n\r\n    let users = props.usersList.map(user => {\r\n        return (\r\n            <UserItem\r\n                key={user.id}\r\n                login={user.login}\r\n                avatar={user.avatar_url}\r\n            />\r\n        )\r\n    })\r\n\r\n    const showMoreUsers = () => {\r\n        props.setCurrentPage(props.currentPage+1);\r\n        props.toggleFetching(true)\r\n        // todo Transfer to chunks\r\n        if(!listIsEnd) {\r\n            fetchUsers(props.searchValue, props.currentPage+1, props.pageSize)\r\n                .then(searchResult => {\r\n                    props.setUsers(searchResult.items, false);\r\n                    props.toggleFetching(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    if (props.isFetching) {\r\n        return (\r\n            <div className=\"user-list\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"user-list\">\r\n                {users}\r\n                <div className=\"w-100\"/>\r\n                {(!listIsEnd && (props.currentPage != null)) ?\r\n                    <button className='btn btn-dark btn-lg' onClick={showMoreUsers}>Show more</button> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersList: state.usersList,\r\n        currentPage: state.currentPage,\r\n        searchValue: state.searchValue,\r\n        pageSize: state.pageSize,\r\n        usersCount: state.usersCount,\r\n        isFetching: state.isFetching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUsers: (users, isUpdate) => dispatch(setUsersAC(users, isUpdate)),\r\n        setCurrentPage: (page) => dispatch(setCurrentPageAC(page)),\r\n        toggleFetching: (isFetching) => dispatch(toggleFetchingAC(isFetching)),\r\n    }\r\n}\r\n\r\nUserList = connect(mapStateToProps, mapDispatchToProps)(UserList);\r\n\r\nexport default UserList;","import React, {createRef, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeSearchValueAC, setCurrentPageAC, setUsersAC, setUsersCountAC, toggleFetchingAC} from \"../Store/reducer\";\r\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\r\nimport {fetchUsers} from \"../Api/api\";\r\n\r\n\r\nlet SearchLine = (props) => {\r\n\r\n    const PAGE_SIZE = 20;\r\n\r\n    const searchInput = createRef();\r\n    const searchDebounced = AwesomeDebouncePromise(fetchUsers, 500);\r\n\r\n    const searchInputChange = () => {\r\n        let searchValue = searchInput.current.value;\r\n        props.changeSearchValue(searchValue);\r\n        props.setCurrentPage(1);\r\n        //todo Transfer to chunks\r\n        if(searchValue) {\r\n            props.toggleFetching(true);\r\n            searchDebounced(searchValue, 1, props.pageSize)\r\n                .then(searchResult => {\r\n                    props.setUsersCount(searchResult.total_count);\r\n                    props.setUsers(searchResult.items, true);\r\n                    props.toggleFetching(false);\r\n                });\r\n        }\r\n    }\r\n    console.log(props.usersCount);\r\n    return (\r\n        <div className='search-line'>\r\n            <input type=\"text\"\r\n                   placeholder=\"Write user name\"\r\n                   ref={searchInput}\r\n                   value={props.searchValue}\r\n                   onChange={searchInputChange}\r\n            />\r\n            <div className=\"user-count\">{props.usersCount ? (\"Total user count:\" + props.usersCount) : null }</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n        searchValue: state.searchValue,\r\n        pageSize: state.pageSize,\r\n        usersCount: state.usersCount,\r\n        isFetching: state.isFetching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUsers: (users, isUpdate) => dispatch(setUsersAC(users, isUpdate)),\r\n        changeSearchValue: (value) => dispatch(changeSearchValueAC(value)),\r\n        setCurrentPage: (page) => dispatch(setCurrentPageAC(page)),\r\n        setUsersCount: (count) => dispatch(setUsersCountAC(count)),\r\n        toggleFetching: (isFetching) => dispatch(toggleFetchingAC(isFetching)),\r\n    }\r\n}\r\n\r\nSearchLine = connect(mapStateToProps, mapDispatchToProps)(SearchLine);\r\n\r\nexport  default SearchLine;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport UserInfo from \"./Components/UserInfo\";\nimport UserList from \"./Components/UserList/UserList\";\nimport SearchLine from \"./Components/SearchLine\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1 className=\"display-4\">GitHub Search App</h1>\n            <SearchLine/>\n            <main>\n                <UserList/>\n                <UserInfo/>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import reducer from \"./reducer\";\r\nimport {createStore} from \"redux\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Store/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n                <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}